		-------------------------------------------------------
		    	Linux Performance Test Suite
		-------------------------------------------------------

	          
  @@ Contact:Scemoon
  @@ MAIL   :guojun.meng@cs2c.com.cn

  @@ 测试准备
     lpts采用python编写，但python2.x中subprocess.py存在bug影响工具正常执行，
  修复方法：执行scripts/patch.sh

  @@ 执行方式一（新增reboot功能）：
     执行文件 ./auto-service.sh
     将lpts文件放在home路径下，检查层级结构是否如下:/home/lpts/reboot.sh
     将flag.txt的值变更为1
     将测试套中所有的文件权限更改为777
     根据需求更改reboot文件中需要执行的工具

  @@ 执行方法二
  @@ 创建测试任务
     1.确定需要选用的测试工具，如:stream
     2.修改parameters/default.conf中stream参数定义，如：
	     TESTMODE = custom		//自定义方式
             PARALLEL=2,4,8  	        //将测试2、4、8并行
             TIMES = 5                  //测试次数5次
     3.创建测试任务, 如:
       ./lpts.py --create -t stream -f  jobs.xml -p parameters/default.conf -n testname
       参数说明：
        -f 指定jobs.xml,不指定时，程序将自动指定为db/jobs.xml
        -p 测试参数配置文件，不指定时，程序将自动指定为parameters/default.conf
	-t 执行单个测试工具
        -g 执行多个测试工具，用“，”隔开，但工具之间不能有空格, 目前支持的工具有:
	   stream,unixbench,x11perf,glxgears,pingpong,iozone,bonnie,dbench_fio
	-n 指定job名称

      4.查看job
        ./lpts.py -l 
	示例：
      JOBBID           JOBNAME                     resultsDB                        STATUS
------------------------------------------------------------------------------------------
141018155034         lpt_neFzr      results_141018155034.xml   unixbench:'ok'|lmbench:'ok'
                                                                   stream:'ok'|iozone:'ok'
                                                             glxgears:'ok'|dbench_fio:'ok'
                                                                  x11perf:'ok'|bonnie:'ok'
                                                                             pingpong:'ok'
------------------------------------------------------------------------------------------

  @@ 运行测试任务
      ./lpts.py --run -t stream -f jobs.xml -i 140212142334 --clean 
      参数说明：
       -f 指定jobs.xml,,不指定时，程序将自动指定为db/jobs.xml
       -i 指定jobs.xml中job id, 默认jobs.xml中最新的job id
       -t 执行单个测试工具   
       -g 执行多个测试工具，用“，”隔开，但工具之间不能有空格, 目前支持的工具有:
          stream,unixbench,x11perf,glxgears,pingpong,iozone,bonnie,dbench_fio
  --clean 表示测试完毕后，清除测试环境

  @@ 生成测试报告
     ./lpts.py --report -F xls -R ./db/result*.xml -r reportname -d resultDir --chart
     参数说明：
       -F 指定报告格式，目前支持txt和xls, 默认为xls,
       -R 指定xml测试数据
       -r 指定测试报告名称,默认将自动生成
       -d 指定报告存放目录，默认为results目录
  --chart 生成chart
       -t 执行单个测试工具
       -g 执行多个测试工具，用“，”隔开，但工具之间不能有空格, 目前支持的工具有:
          stream,unixbench,x11perf,glxgears,pingpong,iozone,bonnie,dbench_fio
   @@ 生成对比测试报告
     ./lpts.py --compare -g stream,pingpong -X ./db/result1.xml,./db/result2.xml,./db/result3.xml 
	       -r compare_result -N result1,result2,result3
     参数说明：
       -g 指定工具集合
       -t 指定单个工具
       -X 指定result.xml，必须用逗号隔开，并且中间不能有空格
       -N 指定result.xml对应的自定义名称，必须用逗号隔开，并且中间不能有空格
       -r 指定报告名称
       -d 指定报告存放目录，默认为results目录
  --chart 生成chart
    
   @@ 通用参数
       -L 指定日志输出级别，包括debug、info、warning、 error 、critical 、exception， 默认info
       -q 关闭屏幕和文件输出
       -v 打开屏幕和文件输出
 
